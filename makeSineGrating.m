function [img] = makeSineGrating(ih,iw,freq,angle,phase,mean,amp,pixPerDeg,r1,r2,bcolor);% usage: [img] = makeSineGrating(ih,iw,freq,angle,phase,mean,amp,pixPerDeg,r1,r2,bcolor)%% Function makes sine-wave grating and presents it either in a rectangle, circle or annulus aperature%% ih = image height, iw = image width (in pixels)% freq = grating frequency in either: cycles/degree (if pixPerDeg specified) or cyc/stimulus width (iw)% angle = angle of grating, 0=horizontal, pi/2=vertical% mean = mean intensity level% amp = amplitude of sinewave% r1 and r2 = inner and outer radii of annulus (r1=0 makes circle), program makes rectangle if not specified%% created by Frank Tong on 2000/01/10%disp('In makeSineGrating')if nargin < 11; bcolor = mean; end		% bcolor = background color, default value = mean intensity	if nargin < 8; pixPerDeg = 0; end		% set pixPerDeg to 0 to specify freq in cycles/stimulusif pixPerDeg > 0	freq = iw/pixPerDeg*freq;			% convert freq to cycles/degreeend% ih = params.gaborHeight;% iw = params.gaborWidth;% freq = params.stim.spatialFreqDeg;% angle = params.stim.orientation;% phase = topPhase;% mean = params.stim.contrastOffset(1);% amp = params.stim.contrastMultiplicator;% pixPerDeg = 0;% r1 =[];% r2 =[];% bcolor = params.backgroundColor(1);   [X,Y] = meshgrid(0:(iw-1),0:(ih-1));	% specify range of meshgridimg = (sin(freq*2*pi/iw*(X.*sin(angle)+Y.*cos(angle))-phase));		% make sine wave, range from -1 to 1img = img*amp+mean;		% values range from mean-amp to mean+ampimg(img>255) = 255;img(img<0) = 0;if mean > 1	| amp >1					% likely for ranges 0-255 rather than 0-1	img = round(img);					% round img valuesendif nargin > 9							% make circle or annulus aperature	r=sqrt((X-iw/2).^2+(Y-ih/2).^2); 	% calculate eccentricity of each point in grid relative to center	img(r>r2 | r<r1) = bcolor;end